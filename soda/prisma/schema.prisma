generator client {
  provider = "prisma-client-js"
  binaryTargets = ["linux-musl", "native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OAuthProvider {
  GOOGLE
}

enum Role {
  USER
  ADMIN
}

model User {
  id    String     @id @default(cuid())

  email String  @unique
  emailVerified Boolean @default(false)

  name  String?
  dateOfBirth DateTime?
  phone String? @unique

  avatar String?

  password String?

  cart CartItem[]
  orders Order[]

  addresses Address[]


  oauthId String? @unique()
  oauthProvider OAuthProvider?

  role    Role     @default(USER)
  profile Profile?

  active Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Profile {
  id      String     @id @default(cuid())
  bio     String

  user    User    @relation(fields: [userId], references: [id])
  userId  String    // relation scalar field (used in the `@relation` attribute above)

  active Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model Inventory {
  id    Int     @id @default(autoincrement())
  name  String?
  description  String?
  product Product?
  inventoryCount Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum OrderStatus {
  PENDING
  PAYMENT_FAILED
  UNSHIPPED
  CONFIRMED
  SHIPPED
  CANCELLED
}

model Order {
  id        Int      @id @default(autoincrement())
  amount Float

  // relations
  user    User?    @relation(fields: [userId], references: [id])
  userId  String?

  address    Address?    @relation(fields: [addressId], references: [id])
  addressId  Int?

  active    Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id        Int      @id @default(autoincrement())
  quantity Int

  user    User?    @relation(fields: [userId], references: [id])
  userId  String?

  product Product?

  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Address {
  id    Int     @id @default(autoincrement())
  fullname  String?

  address  String? // full address

  town String?
  region String?
  nearby String?

  zipcode String?
  city String?
  country String?

  user    User?    @relation(fields: [userId], references: [id])
  userId  String?

  orders Order[]

  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductDetails {
  id        Int      @id @default(autoincrement())
  product Product?
  size String
  color String
  // images ...
  // tags
  // categories etc..
  // other product details...
}

model Product {
  id        Int      @id @default(autoincrement())
  title     String
  description   String?

  productDetails    ProductDetails?    @relation(fields: [productDetailsId], references: [id])
  productDetailsId  Int?

  published Boolean  @default(false)

  price Float

  inventory    Inventory?    @relation(fields: [inventoryId], references: [id])
  inventoryId  Int?

  cartItem    CartItem?    @relation(fields: [cartItemId], references: [id])
  cartItemId  Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
